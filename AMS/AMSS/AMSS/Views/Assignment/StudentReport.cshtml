@model AMSS.Models.Property
@using System.Data;
@{
    ViewBag.Title = "StudentReport";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
    DataTable dt = new DataTable();

    dt = (DataTable)ViewBag.StudentReport;
    int i = 1;
}
<style>
    .table.table-bordered thead tr {
     background: white; 
    color: #333;
}
</style>
<div class="contentwrapper">
    <div class="heading">
        <h3>Student Report</h3>
        <div class="resBtnSearch">
            <a href="#"><span class="s16 icomoon-icon-search-3"></span></a>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12">
          
            <div class="panel panel-default " style="border: 1px solid #c4c4c4;">
                <div class="panel-heading">
                    <h4 class="panel-title">
                        @if (ViewBag.Assignment != null)
                    {
                        @ViewBag.Assignment
                    }
                    else
                    {

                    }
                </h4>
            </div>
            <div class="panel-body" >
                <div class="panel panel-default">
                    <form class="form-horizontal" method="post" >

                        <div class="form-group">
                            <div class="col-md-5">
                                <label class="col-lg-4 control-label" style="text-align: left;">Student<span style="color: red;">*</span></label>
                                <div class="col-lg-8">
                                    @Html.DropDownListFor(model => model.studentid, (IEnumerable<SelectListItem>)ViewBag.Studentlist, "-Select Student-", new { @class = "form-control select2", @required = "true" })
                                  </div>
                            </div>
                       
                            <div class="col-md-5">
                                <label class="col-lg-4 control-label" style="text-align: left;">Assignment<span style="color: red;">*</span></label>
                                <div class="col-lg-8">
                                    @Html.DropDownListFor(model => model.assignmentID, (IEnumerable<SelectListItem>)ViewBag.assignmentlist, "-Select Assignment-", new { @class = "form-control select2", @required = "true" })

                                </div>
                            </div>                          
                            <div class="col-md-2">
                                <button type="submit" class="btn btn-success " id="btnEdit">Get Report</button>

                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <div class="col-lg-12">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h4 class="panel-title"></h4>
            </div>
            <div class="panel-body" id="myInput">


                @if (dt == null)
                {
                    <h4 class="panel-title alert alert-info fade in text-center" style="color: #F10404; margin-top: 10px; text-align: center;">No result found.</h4>
                }

                else
                {
                   
                    <div class="col-md-12">
                        <p>Hi &nbsp;&nbsp;&nbsp;&nbsp;<span style="font-weight:bold;font-size:14px;">@ViewBag.FullName</span></p>
                        <br />
                        <p> How are you </p>
                        <p> Great to assess your submission</p>                          
                        <div style="width:400px;float:left;"><hr /></div>
                        <p style="clear:both">Time Management:- @ViewBag.assignmentname	</p>
                        <p><b>@ViewBag.assignmentname</b>	By	<b>@ViewBag.FullName</b></p>
                        <table id="" class="table table-bordered" cellspacing="0" width="100%">
                            <thead>
                                <tr>
                                    <th>Question No</th>
                                    <th>Question</th>
                                    <th>Marks/Out of</th>                                    
                                  
                            <tbody>
                                @foreach (DataRow row in dt.Rows)
                                {
                                    <tr>
                                        <td>@i</td>
                                        @if (!string.IsNullOrEmpty(row["Question"].ToString()))
                                        {
                                            <td>@row["Question"].ToString()</td>
                                        }
                                        else
                                        {
                                            <td>N/A</td>
                                        }
                                       
                                        @if (!string.IsNullOrEmpty(row["MaxMark"].ToString()) && !string.IsNullOrEmpty(row["MarksObtain"].ToString()))
                                        {
                                            <td>
                                                @row["MaxMark"].ToString()<span>/</span>@row["MarksObtain"].ToString()
                                            </td>
                                        }
                                        else
                                        {
                                            <td>
                                                N / A
                                            </td>
                                        }    
                                    </tr>
                                   i++;
                                }
                               
                            </tbody>

                        </table>





                        <p>Your Final Mark	:-		<b>@ViewBag.StudentMark	/	@ViewBag.TotalMark </b></p> 
                        <div style="width:400px;float:left;"><hr /></div>
                        <p style="clear:both"><b>@ViewBag.assignmentname:-</b></p>
                        <p>Total Mark of Assessment:-	@ViewBag.TotalMark</p>
                        <p>Student's Mark:-	@ViewBag.StudentMark</p>
                        <p>Number of Days Late (maximum 7):-	@ViewBag.LateDays</p>
                        <p>Total Penalty %:-	@ViewBag.TotalPenalty%</p>
                        <p><b>Results:-</b></p>
                        <p>Student's Mark with Penalty:-	@ViewBag.StudentMarksPenalty</p>
                        <p>Student's Mark as a Percentage:-	@ViewBag.StudentMarksPer%</p>
                        <p>Status:-	@ViewBag.Status</p>
                        <p>Regards</p>
                             <hr />
                        @ViewBag.User
                        </div>
                 } 
            </div><br />
            <div class="col-md-12 text-right">
                <a class="btn btn-success" onclick="WriteToFile()">Save Text File</a>&nbsp;&nbsp;&nbsp;&nbsp;
                <a class="btn btn-primary" onclick="myFunction()">Copy</a>
            </div>
        </div>
        <!-- End .panel -->
    </div>

</div>
</div>
<script>
    function myFunction() {
        var copyText = document.getElementById("myInput");
        copyTextToClipboard(copyText.innerText)

    }
    function fallbackCopyTextToClipboard(text) {
        text.select();
        try {
            var successful = document.execCommand('copy');
            var msg = successful ? 'successful' : 'unsuccessful';
            console.log('Fallback: Copying text command was ' + msg);
        } catch (err) {
            console.error('Fallback: Oops, unable to copy', err);
        }

    }
    function copyTextToClipboard(text) {
        if (!navigator.clipboard) {
            fallbackCopyTextToClipboard(text);
            return;
        }
        navigator.clipboard.writeText(text).then(function () {
            alert('Copying to clipboard was successful!');
        }, function (err) {
            console.error('Async: Could not copy text: ', err);
        });
    }
</script>

    <script>
        //function WriteToFile() {
        //    const fs = require('fs')

        //    let data = "Learning how to write in a file.";
        //    fs.writeFile('D:/Output.txt', data, (err) => {
        //        if (err) throw err;
        //    });
        //    Console.log("myInput :" + data);
        //}
</script> 
<script>
    //function WriteToFile() {
    //    var data = "Learning how to write in a file.";
    //  //  var fso = new ActiveXObject("Scripting.FileSystemObject"); //CreateObject("Scripting.FileSystemObject");
       
    //    var file = new File([data], "D:/filename1.txt", {
    //    type: "text/plain",
    //    });
    //    var s = file.CreateTextFile("D:/filename1.txt", true);
    //    //var myInput = document.getElementById('myInput'); 
    //    s.writeText("myInput :" + myInput);       
    //    //file.Close();
    //}

    function WriteToFile() {
        var myInput = document.getElementById('myInput');
        $.ajax({
            url: '@Url.Action("SaveStudentReport", "Assignment")',
            type: 'POST',
            dataType: 'json',
            data:
            {
                Text: myInput.innerText
            },
            beforeSend: function () {
                $('#overlay').fadeIn(500);
            },
            success: function (data) {
                alert('File Created successfull in D://studentreport.txt!');

            },
            error: function () {
                alert('error');
            }
        });
    }
</script>
@*<script>
    
    function save_content_to_file(content, filename) {
        var dlg = false;
        with (document) {
          var ir = createElement('iframe');
            ir.id = 'ifr';
            ir.location = 'about.blank';
            ir.style.display = 'none';
            body.appendChild(ir);
            with (getElementById('ifr').contentWindow.document) {
                open("text/plain", "replace");
                charset = "utf-8";
                write(content);
                close();
                document.charset = "utf-8";
                dlg = execCommand('SaveAs', false, filename);
            }
            body.removeChild(ir);
        }
        alert(dlg);
        return dlg;
    }

    function WriteToFile1() {
       
        var myInput = document.getElementById('myInput');
        var successful = document.execCommand('SaveAs', false, filename);
        alert(successful);
        //save_content_to_file(myInput.innerText, 'D://studentreport2');
    }
</script>*@