@model costoracle2.Models.Itemdelivery
@{
    ViewBag.Title = "itemform";
    Layout = "~/Views/Shared/_Layout.cshtml";
    TempData["ItemDelivery"] = "active";
}

@Html.Partial("_IteamDelevery")

<div class="roots">
    <div class="container">
        <div class="row">
                <div class="offset-md-1 col-md-10 ups">
            <form method="post" action="@Url.Action("Itemform","Services")">
                    <div class="form-a">
                        <h4 class="ps">Destination address</h4>
                        <div class="row form-group">
                            <label for="" class="col-md-3">Name:</label>
                            @Html.TextBoxFor(model => model.Name, new { @class = "col-md-9 form-control k1", @placeholder = "Name" })
                        </div>
                        <div class="row form-group">
                            <label for="" class="col-md-3 ">Address:</label>
                            @Html.TextBoxFor(model => model.Address, new { @class = "col-md-9 form-control k1", @placeholder = "Destination Address" })
                        </div>
                        <div class="row form-group" style="display:none;">
                            <label for="" class="col-md-3">Latitude:</label>
                            @Html.TextBoxFor(model => model.Latitude, new { @class = "col-md-9 form-control k1", @placeholder = "Destination Latitude" })
                        </div>
                        <div class="row form-group" style="display:none;">
                            <label for="" class="col-md-3">Longitude:</label>
                            @Html.TextBoxFor(model => model.Longitude, new { @class = "col-md-9 form-control k1", @placeholder = "Destination Longitude" })

                        </div>
                        <div class="row form-group">
                            <label for="" class="col-md-3">City:</label>
                            @Html.TextBoxFor(model => model.City, new { @class = "col-md-9 form-control k1", @placeholder = "Destination City" })
                        </div>
                        <div class="row form-group">
                            <label for="" class="col-md-3">Country:</label>
                            @Html.TextBoxFor(model => model.Country, new { @class = "col-md-9 form-control k1", @placeholder = "Destination Country" })
                        </div>
                        @*<a href="package.html">
                        <button type="submit" class="btn btn-primary boot1">
                            Next
                        </button>
                    </a>*@
                    </div>
                    <div class="clearfix"></div>
                    <div class="form-b">
                        <h4 class="ps">Pick up address</h4>
                        <div class="row form-group">
                            <label for="" class="col-md-3">Address:</label>
                            @Html.TextBoxFor(model => model.Addresspick, new { @class = "col-md-9 form-control k1", @placeholder = "Pick Up Address" })
                        </div>
                        <div class="row form-group" style="display:none;">
                            <label for="" class="col-md-3 ">Latitude:</label>
                            @Html.TextBoxFor(model => model.Latitudepick, new { @class = "col-md-9 form-control k1", @placeholder = "Pick Up Latitude" })
                        </div>
                        <div class="row form-group" style="display:none;">
                            <label for="" class="col-md-3">Longitude:</label>
                            @Html.TextBoxFor(model => model.Longitudepick, new { @class = "col-md-9 form-control k1", @placeholder = "Pick Up Longitude" })
                        </div>
                        <div class="row form-group">
                            <label for="" class="col-md-3">City:</label>
                            @Html.TextBoxFor(model => model.Citypick, new { @class = "col-md-9 form-control k1", @placeholder = "Pick Up City" })
                        </div>
                        <div class="row form-group">
                            <label for="" class="col-md-3">Country:</label>
                            @Html.TextBoxFor(model => model.Countrypick, new { @class = "col-md-9 form-control k1", @placeholder = "Pick Up Country" })
                        </div>
                        @*<a href="package.html">*@
                            <button type="submit" class="btn btn-primary boot1">
                                Next
                            </button>
                        @*</a>*@
                    </div>
            </form>
                </div>
        </div>
    </div>
    </div>

<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDF8I_evWUUrTskNcc6UhNmxjiEbAdLyhc&v=3.exp&signed_in=true&libraries=places"></script>


<script type="text/javascript">

    var placeSearch, autocomplete;
    var componentForm = {
        //street_number: 'short_name',
        //route: 'long_name',
        locality: 'long_name',
        //administrative_area_level_2: 'long_name',
        administrative_area_level_1: 'long_name',
        country: 'long_name',
        postal_code: 'short_name'
    };


    var mumbai = new google.maps.LatLng(18.9750, 72.8258);

    var mapOptions = {
        zoom: 3,
        center: mumbai
    };

    var source, destination;
    var directionsDisplay;
    var directionsService = new google.maps.DirectionsService();
    google.maps.event.addDomListener(window, 'load', function () {
        new google.maps.places.SearchBox(document.getElementById('Address'));
        new google.maps.places.SearchBox(document.getElementById('Addresspick'));
        directionsDisplay = new google.maps.DirectionsRenderer({ 'draggable': false });

    });


    google.maps.event.addDomListener(window, 'load', function () {
        var places = new google.maps.places.Autocomplete(document.getElementById('Address'));


        google.maps.event.addListener(places, 'place_changed', function () {

            var place = places.getPlace();
            var address = place.formatted_address;
            var latitude = place.geometry.location.lat();
            var longitude = place.geometry.location.lng();
            var mesg = "Address: " + address;
            mesg += "\nLatitude: " + latitude;
            mesg += "\nLongitude: " + longitude;
            //alert(latitude, longitude, address);
            $('#Latitude').val(latitude);
            $('#Longitude').val(longitude);
            //$('#sadd').val(address);
            //document.getElementsById('lat').value = latitude;
            //document.getElementsById('long').value = longitude;

            console.log(place.address_components);
            for (var i = 0; i < place.address_components.length; i++) {
                var addressType = place.address_components[i].types[0];

                if (componentForm[addressType]) {
                    var valComp = place.address_components[i][componentForm[addressType]];
                    //document.getElementById(addressType).value = val;
                    if (addressType == 'locality') {
                        $('#City').val(valComp);
                    }
                    else if (addressType == 'country') {
                        $('#Country').val(valComp);
                    }
                }
            }

        });

    });




    google.maps.event.addDomListener(window, 'load', function () {
        var places = new google.maps.places.Autocomplete(document.getElementById('Addresspick'));


        google.maps.event.addListener(places, 'place_changed', function () {

            var place = places.getPlace();
            var address1 = place.formatted_address;
            var latitude1 = place.geometry.location.lat();
            var longitude2 = place.geometry.location.lng();
            var mesg = "Address: " + address1;
            mesg += "\nLatitude: " + latitude1;
            mesg += "\nLongitude: " + longitude2;
            //alert(latitude1, longitude2, address1);
            $('#Latitudepick').val(latitude1);
            $('#Longitudepick').val(longitude2);
            //$('#dadd').val(address1);
            //document.getElementsById('lat').value = latitude;
            //document.getElementsById('long').value = longitude;
            console.log(place.address_components);
            for (var i = 0; i < place.address_components.length; i++) {
                var addressType = place.address_components[i].types[0];

                if (componentForm[addressType]) {
                    var valComp = place.address_components[i][componentForm[addressType]];
                    if (addressType == 'locality') {
                        $('#Citypick').val(valComp);
                    }
                    else if (addressType == 'country') {
                        $('#Countrypick').val(valComp);
                    }
                }
            }
        });

    });



</script>