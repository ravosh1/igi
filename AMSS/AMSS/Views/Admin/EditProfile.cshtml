@model AMSS.Models.Property
@using System.Data;

@{
    ViewBag.Title = "EditProfile";
    Layout = "~/Views/Shared/_Layoutadmin.cshtml";
}
<div class="contentwrapper">
    <!--Content wrapper-->


    <div class="heading">
        <!--  .heading-->

        <h3>Edit Profile</h3>

        <div class="resBtnSearch">
            <a href="#"><span class="s16 icomoon-icon-search-3"></span></a>
        </div>
    </div>
    <!-- End  / heading-->

    <!-- Start .row -->
    <div class="row">
        <div class="col-lg-12">
            <!-- col-lg-12 start here -->

            <div class="col-md-12">
                @*@if (!string.IsNullOrEmpty((string)ViewBag.error))
                                {
                                    <p class="errormsg">@ViewBag.error</p>
                                }
                                else if (!string.IsNullOrEmpty((string)ViewBag.success))
                                {
                                    <p class="successmsg">@ViewBag.success</p>
                                }*@
            </div>

            <div class="panel panel-default toggle panelMove panelClose panelRefresh">
                <!-- Start .panel -->
                <div class="panel-heading">
                    <h4 class="panel-title">Edit Profile</h4>
                </div>

                <div class="panel-body pt0 pb0">

                    @if (!string.IsNullOrEmpty((string)ViewBag.error))
                    {
                        <div class="alert alert-danger fade in">
                            <button type="button" class="close" data-dismiss="alert" aria-hidden="true">×</button>
                            <i class="glyphicon glyphicon-ban-circle alert-icon"></i>
                            @ViewBag.error
                        </div>
                    }

                    <form class="form-horizontal group-border stripped" action="@Url.Action("EditProfile","Admin")" method="post" enctype="multipart/form-data">

                        <div class="form-group">
                            <div class="col-md-6">
                                @Html.HiddenFor(model => model.Password)
                                @Html.HiddenFor(model => model.UserID)
                                @Html.HiddenFor(model => model.UserType)
                                @Html.HiddenFor(model => model.ImgURL)

                                @*@Html.LabelFor(model => model.FirstName, new { @class = "col-lg-3  control-label", @style = "text-align: left;" })*@
                                <label class="col-lg-3 control-label" style = "text-align: left;">
                                    Name
                                </label>
                                <div class="col-lg-9 ">

                                    @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control", @required = "true", @placeholder = "Enter your Name" })
                                    <p class="errormsg" style="color: #EC1212;">@Html.ValidationMessageFor(model => model.FirstName)</p>
                                </div>
                            </div>
                            <div class="col-md-6">
                                @* <label class="col-lg-3 col-md-3 control-label" for="">Make</label>*@
                                @Html.LabelFor(model => model.Contact, new { @class = "col-md-3 control-label", @style = "text-align: left;" })
                                <div class="col-md-9">
                                    @Html.TextBoxFor(model => model.Contact, new { @class = "form-control", @required = "true", @placeholder = "Contact No" })
                                    <p class="errormsg" style="color: #EC1212;">@Html.ValidationMessageFor(model => model.Contact)</p>

                                </div>
                            </div>
                        </div>
                        <!-- End .form-group  -->



                        <div class="form-group">
                            <div class="col-md-6">

                                @Html.LabelFor(model => model.EmailID, new { @class = "col-md-3  control-label", @style = "text-align: left;" })
                                <div class="col-md-9 ">
                                    @Html.TextBoxFor(model => model.EmailID, new { @class = "form-control", @required = "true", @placeholder = "Email Id" })
                                    <p class="errormsg" style="color: #EC1212;">@Html.ValidationMessageFor(model => model.EmailID)</p>
                                </div>
                            </div>

                            <div class="col-md-6">
                                @Html.LabelFor(model => model.City, new { @class = "col-md-3 control-label", @style = "text-align: left;" })
                                <div class="col-md-9">
                                    @Html.TextBoxFor(model => model.City, new { @class = "form-control", @required = "true", @placeholder = "City" })
                                    <p class="errormsg" style="color: #EC1212;">@Html.ValidationMessageFor(model => model.City)</p>
                                </div>
                            </div>

                        </div>

                        <div class="form-group">
                            <div class="col-md-12">
                                @Html.LabelFor(model => model.Address, new { @class = "col-lg-1  control-label", @style = "text-align: left;" })

                                <div class="col-lg-11">

                                    @Html.TextAreaFor(model => model.Address, new { @class = "form-control", @placeholder = "Address" })
                                </div>
                            </div>
                        </div>

                        <div class="form-group">

                            <label class="col-lg-2 col-md-3 control-label" for="">Photo</label>
                            <div class="col-lg-10 col-md-10">
                                <input type="file" name="ImageData" id="ImageData" class="form-control" onchange="showMyImage(this)" />
                            </div>


                        </div>
                        <div class="form-group">
                            @* <label class="col-lg-2 col-md-3 control-label" for="">Photo</label>*@
                            <div class="col-lg-12 col-md-12">
                                <img id="thumbnil" src="@Url.Content(ViewBag.photo)" style="max-width: 50%;max-height: 50%;" />
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-lg-12 col-md-12">
                                <a href="@Url.Action("Dashboard", "Portal")" style="float: right;" class="btn btn-primary mr5 mb10">Cancel</a>
                                <button type="submit" style="float: right;" class="btn btn-primary mr5 mb10" >Submit</button>

                            </div>
                        </div>
                    </form>
                </div>
            </div>
        </div>
        <!-- col-lg-12 end here -->

    </div>



</div>


<script type="text/javascript">

    function checkFileExtension(elem) {
        var filePath = elem.value;


        if (filePath.indexOf('.') == -1)
            return false;


        var validExtensions = new Array();
        var ext = filePath.substring(filePath.lastIndexOf('.') + 1).toLowerCase();


        validExtensions[0] = 'jpg';
        validExtensions[1] = 'jpeg';
        validExtensions[2] = 'bmp';
        validExtensions[3] = 'png';
        validExtensions[4] = 'gif';



        for (var i = 0; i < validExtensions.length; i++) {
            if (ext == validExtensions[i])
                return true;
        }


        alert('The file extension ' + ext.toUpperCase() + ' is not allowed!');
        elem.value = null;
        return false;
    }


    function showMyImage(fileInput) {

        if (checkFileExtension(fileInput) == true) {
            var files = fileInput.files;
            for (var i = 0; i < files.length; i++) {
                var file = files[i];
                var imageType = /image.*/;
                if (!file.type.match(imageType)) {
                    continue;
                }
                var img = document.getElementById("thumbnil");
                img.file = file;
                var reader = new FileReader();
                reader.onload = (function (aImg) {
                    return function (e) {
                        aImg.src = e.target.result;
                    };
                })(img);
                reader.readAsDataURL(file);
            }
        }
    }


    function FillSubcategory() {

    }

    $(function () {
        $('#Category_Id').change(function () {
            var id = document.getElementById('Category_Id').value;
            $.ajax({
                url: '@Url.Action("FillWithSubCategory", "Product")',
                type: 'POST',
                data: { id: id },
                success: function (data) {
                    var items = '<option value="0">Select Sub Category</option>';
                    $.each(data, function (i, SubLoc) {
                        items += "<option value='" + SubLoc.Value + "'>" + SubLoc.Text + "</option>";
                    });
                    $('#Sub_Category_Id').html(items);
                },
                error: function (req, status, error) {
                    //  alert("R: " + req + " S: " + status + " E: " + error);
                },
            });
        });
    });

</script>






